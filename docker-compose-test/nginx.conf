worker_processes  auto;

user root;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    log_format  main  '$remote_addr $remote_user [$time_local] "$request" $status "$http_referer" "$http_user_agent"';
    access_log  /dev/stdout  main;
    error_log   stderr debug;

    default_type  application/octet-stream;
    include       /usr/local/nginx/conf/mime.types;
    client_max_body_size 0;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;

    ### cache
    vod_metadata_cache                 metadata_cache 16m;
    vod_response_cache                 response_cache 512m;
    vod_mapping_cache                  mapping_cache 5m;

    ### hls
    vod_last_modified_types            *;
    vod_segment_duration               2000;
    vod_align_segments_to_key_frames   on;
    vod_dash_fragment_file_name_prefix "segment";
    vod_hls_segment_file_name_prefix   "segment";
    vod_manifest_segment_durations_mode accurate;

    # gzip manifests
    gzip on;
    gzip_types application/vnd.apple.mpegurl;

    # file handle caching / aio
    #open_file_cache          max=1000 inactive=5m;
    #open_file_cache_valid    2m;
    #open_file_cache_min_uses 1;
    #open_file_cache_errors   on;

    aio on;

    upstream backend {
        server 127.0.0.1:7071;
        server 127.0.0.1:7072;

        check interval=3000 rise=2 fall=5 timeout=5000 type=http;
        check_http_send "HEAD /test/status.check HTTP/1.0\r\n\r\n";
        check_http_expect_alive http_2xx http_3xx;
    }
    
    server {
        listen 7070;
        location / {
            proxy_pass http://backend;
        }
    }

    server {
        listen 7071;
        server_name localhost;
        root /opt/static;

        location /test/ {
            alias /opt/static/volume1/;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_buffering off;
            client_max_body_size    0;
            expires 1d;
        }

    }

    server {
        listen 7072;
        server_name localhost;
        root /opt/static;

        location /test/ {
            alias /opt/static/volume2/;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_buffering off;
            client_max_body_size    0;
            expires 1d;
        }

        location /hls/test/ {
            alias /opt/static/volume3/;
            vod hls;
            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        }

    }

    server {
        listen 80;
        server_name localhost;
        root /opt/static;
        location / {
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $remote_addr;
            proxy_pass http://127.0.0.1:8080;
        }
        proxy_buffering off;
        client_max_body_size    0;
    }

}
